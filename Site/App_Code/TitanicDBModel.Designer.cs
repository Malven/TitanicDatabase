//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("TitanicModel", "FK_Cabin_Class", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TitanicModel.Class), "Cabin", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TitanicModel.Cabin), true)]
[assembly: EdmRelationshipAttribute("TitanicModel", "FK_Passenger_Cabin", "Cabin", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TitanicModel.Cabin), "Passenger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TitanicModel.Passenger), true)]
[assembly: EdmRelationshipAttribute("TitanicModel", "FK_Crew_Class", "Class", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TitanicModel.Class), "Crew", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TitanicModel.Crew), true)]
[assembly: EdmRelationshipAttribute("TitanicModel", "FK_Crew_DepartCity", "DepartCity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TitanicModel.DepartCity), "Crew", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TitanicModel.Crew), true)]
[assembly: EdmRelationshipAttribute("TitanicModel", "FK_Crew_Department", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TitanicModel.Department), "Crew", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TitanicModel.Crew), true)]
[assembly: EdmRelationshipAttribute("TitanicModel", "FK_Passenger_DepartCity", "DepartCity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TitanicModel.DepartCity), "Passenger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TitanicModel.Passenger), true)]

#endregion

namespace TitanicModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TitanicEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TitanicEntities object using the connection string found in the 'TitanicEntities' section of the application configuration file.
        /// </summary>
        public TitanicEntities() : base("name=TitanicEntities", "TitanicEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TitanicEntities object.
        /// </summary>
        public TitanicEntities(string connectionString) : base(connectionString, "TitanicEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TitanicEntities object.
        /// </summary>
        public TitanicEntities(EntityConnection connection) : base(connection, "TitanicEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cabin> Cabin
        {
            get
            {
                if ((_Cabin == null))
                {
                    _Cabin = base.CreateObjectSet<Cabin>("Cabin");
                }
                return _Cabin;
            }
        }
        private ObjectSet<Cabin> _Cabin;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Class> Class
        {
            get
            {
                if ((_Class == null))
                {
                    _Class = base.CreateObjectSet<Class>("Class");
                }
                return _Class;
            }
        }
        private ObjectSet<Class> _Class;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Crew> Crew
        {
            get
            {
                if ((_Crew == null))
                {
                    _Crew = base.CreateObjectSet<Crew>("Crew");
                }
                return _Crew;
            }
        }
        private ObjectSet<Crew> _Crew;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DepartCity> DepartCity
        {
            get
            {
                if ((_DepartCity == null))
                {
                    _DepartCity = base.CreateObjectSet<DepartCity>("DepartCity");
                }
                return _DepartCity;
            }
        }
        private ObjectSet<DepartCity> _DepartCity;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Department
        {
            get
            {
                if ((_Department == null))
                {
                    _Department = base.CreateObjectSet<Department>("Department");
                }
                return _Department;
            }
        }
        private ObjectSet<Department> _Department;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Passenger> Passenger
        {
            get
            {
                if ((_Passenger == null))
                {
                    _Passenger = base.CreateObjectSet<Passenger>("Passenger");
                }
                return _Passenger;
            }
        }
        private ObjectSet<Passenger> _Passenger;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cabin EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCabin(Cabin cabin)
        {
            base.AddObject("Cabin", cabin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Class EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClass(Class @class)
        {
            base.AddObject("Class", @class);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Crew EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCrew(Crew crew)
        {
            base.AddObject("Crew", crew);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DepartCity EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartCity(DepartCity departCity)
        {
            base.AddObject("DepartCity", departCity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Department EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartment(Department department)
        {
            base.AddObject("Department", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Passenger EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPassenger(Passenger passenger)
        {
            base.AddObject("Passenger", passenger);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        public int CabinPassenger(global::System.String name)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("CabinPassenger", nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        public int CrewClass(global::System.String name)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("CrewClass", nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        public int CrewDepartment(global::System.String name)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("CrewDepartment", nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int GetAllInCrew()
        {
            return base.ExecuteFunction("GetAllInCrew");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="firstname">No Metadata Documentation available.</param>
        /// <param name="lastname">No Metadata Documentation available.</param>
        public int GetClassOfPassenger(global::System.String firstname, global::System.String lastname)
        {
            ObjectParameter firstnameParameter;
            if (firstname != null)
            {
                firstnameParameter = new ObjectParameter("Firstname", firstname);
            }
            else
            {
                firstnameParameter = new ObjectParameter("Firstname", typeof(global::System.String));
            }
    
            ObjectParameter lastnameParameter;
            if (lastname != null)
            {
                lastnameParameter = new ObjectParameter("Lastname", lastname);
            }
            else
            {
                lastnameParameter = new ObjectParameter("Lastname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("GetClassOfPassenger", firstnameParameter, lastnameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="firstname">No Metadata Documentation available.</param>
        /// <param name="lastname">No Metadata Documentation available.</param>
        public int GetClassOfPassengers(global::System.String firstname, global::System.String lastname)
        {
            ObjectParameter firstnameParameter;
            if (firstname != null)
            {
                firstnameParameter = new ObjectParameter("Firstname", firstname);
            }
            else
            {
                firstnameParameter = new ObjectParameter("Firstname", typeof(global::System.String));
            }
    
            ObjectParameter lastnameParameter;
            if (lastname != null)
            {
                lastnameParameter = new ObjectParameter("Lastname", lastname);
            }
            else
            {
                lastnameParameter = new ObjectParameter("Lastname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("GetClassOfPassengers", firstnameParameter, lastnameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cityID">No Metadata Documentation available.</param>
        public int GetCrewFromCity(Nullable<global::System.Int32> cityID)
        {
            ObjectParameter cityIDParameter;
            if (cityID.HasValue)
            {
                cityIDParameter = new ObjectParameter("CityID", cityID);
            }
            else
            {
                cityIDParameter = new ObjectParameter("CityID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("GetCrewFromCity", cityIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cityID">No Metadata Documentation available.</param>
        public int GetPassengerFromCity(Nullable<global::System.Int32> cityID)
        {
            ObjectParameter cityIDParameter;
            if (cityID.HasValue)
            {
                cityIDParameter = new ObjectParameter("CityID", cityID);
            }
            else
            {
                cityIDParameter = new ObjectParameter("CityID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("GetPassengerFromCity", cityIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="lastname">No Metadata Documentation available.</param>
        /// <param name="firstname">No Metadata Documentation available.</param>
        /// <param name="age">No Metadata Documentation available.</param>
        /// <param name="departmentID">No Metadata Documentation available.</param>
        /// <param name="cityID">No Metadata Documentation available.</param>
        /// <param name="job">No Metadata Documentation available.</param>
        /// <param name="classID">No Metadata Documentation available.</param>
        public int InsertCrew(global::System.String lastname, global::System.String firstname, Nullable<global::System.Int32> age, Nullable<global::System.Int32> departmentID, Nullable<global::System.Int32> cityID, global::System.String job, Nullable<global::System.Int32> classID)
        {
            ObjectParameter lastnameParameter;
            if (lastname != null)
            {
                lastnameParameter = new ObjectParameter("Lastname", lastname);
            }
            else
            {
                lastnameParameter = new ObjectParameter("Lastname", typeof(global::System.String));
            }
    
            ObjectParameter firstnameParameter;
            if (firstname != null)
            {
                firstnameParameter = new ObjectParameter("Firstname", firstname);
            }
            else
            {
                firstnameParameter = new ObjectParameter("Firstname", typeof(global::System.String));
            }
    
            ObjectParameter ageParameter;
            if (age.HasValue)
            {
                ageParameter = new ObjectParameter("Age", age);
            }
            else
            {
                ageParameter = new ObjectParameter("Age", typeof(global::System.Int32));
            }
    
            ObjectParameter departmentIDParameter;
            if (departmentID.HasValue)
            {
                departmentIDParameter = new ObjectParameter("DepartmentID", departmentID);
            }
            else
            {
                departmentIDParameter = new ObjectParameter("DepartmentID", typeof(global::System.Int32));
            }
    
            ObjectParameter cityIDParameter;
            if (cityID.HasValue)
            {
                cityIDParameter = new ObjectParameter("CityID", cityID);
            }
            else
            {
                cityIDParameter = new ObjectParameter("CityID", typeof(global::System.Int32));
            }
    
            ObjectParameter jobParameter;
            if (job != null)
            {
                jobParameter = new ObjectParameter("Job", job);
            }
            else
            {
                jobParameter = new ObjectParameter("Job", typeof(global::System.String));
            }
    
            ObjectParameter classIDParameter;
            if (classID.HasValue)
            {
                classIDParameter = new ObjectParameter("ClassID", classID);
            }
            else
            {
                classIDParameter = new ObjectParameter("ClassID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("InsertCrew", lastnameParameter, firstnameParameter, ageParameter, departmentIDParameter, cityIDParameter, jobParameter, classIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="lastname">No Metadata Documentation available.</param>
        /// <param name="firstname">No Metadata Documentation available.</param>
        /// <param name="age">No Metadata Documentation available.</param>
        /// <param name="cabinID">No Metadata Documentation available.</param>
        /// <param name="ticket">No Metadata Documentation available.</param>
        /// <param name="ticketPrice">No Metadata Documentation available.</param>
        /// <param name="cityID">No Metadata Documentation available.</param>
        /// <param name="job">No Metadata Documentation available.</param>
        public int InsertPassenger(global::System.String lastname, global::System.String firstname, global::System.String age, Nullable<global::System.Int32> cabinID, global::System.String ticket, global::System.String ticketPrice, Nullable<global::System.Int32> cityID, global::System.String job)
        {
            ObjectParameter lastnameParameter;
            if (lastname != null)
            {
                lastnameParameter = new ObjectParameter("Lastname", lastname);
            }
            else
            {
                lastnameParameter = new ObjectParameter("Lastname", typeof(global::System.String));
            }
    
            ObjectParameter firstnameParameter;
            if (firstname != null)
            {
                firstnameParameter = new ObjectParameter("Firstname", firstname);
            }
            else
            {
                firstnameParameter = new ObjectParameter("Firstname", typeof(global::System.String));
            }
    
            ObjectParameter ageParameter;
            if (age != null)
            {
                ageParameter = new ObjectParameter("Age", age);
            }
            else
            {
                ageParameter = new ObjectParameter("Age", typeof(global::System.String));
            }
    
            ObjectParameter cabinIDParameter;
            if (cabinID.HasValue)
            {
                cabinIDParameter = new ObjectParameter("CabinID", cabinID);
            }
            else
            {
                cabinIDParameter = new ObjectParameter("CabinID", typeof(global::System.Int32));
            }
    
            ObjectParameter ticketParameter;
            if (ticket != null)
            {
                ticketParameter = new ObjectParameter("Ticket", ticket);
            }
            else
            {
                ticketParameter = new ObjectParameter("Ticket", typeof(global::System.String));
            }
    
            ObjectParameter ticketPriceParameter;
            if (ticketPrice != null)
            {
                ticketPriceParameter = new ObjectParameter("TicketPrice", ticketPrice);
            }
            else
            {
                ticketPriceParameter = new ObjectParameter("TicketPrice", typeof(global::System.String));
            }
    
            ObjectParameter cityIDParameter;
            if (cityID.HasValue)
            {
                cityIDParameter = new ObjectParameter("CityID", cityID);
            }
            else
            {
                cityIDParameter = new ObjectParameter("CityID", typeof(global::System.Int32));
            }
    
            ObjectParameter jobParameter;
            if (job != null)
            {
                jobParameter = new ObjectParameter("Job", job);
            }
            else
            {
                jobParameter = new ObjectParameter("Job", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("InsertPassenger", lastnameParameter, firstnameParameter, ageParameter, cabinIDParameter, ticketParameter, ticketPriceParameter, cityIDParameter, jobParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="age">No Metadata Documentation available.</param>
        public int SearchByAge(global::System.String age)
        {
            ObjectParameter ageParameter;
            if (age != null)
            {
                ageParameter = new ObjectParameter("age", age);
            }
            else
            {
                ageParameter = new ObjectParameter("age", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("SearchByAge", ageParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TitanicModel", Name="Cabin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cabin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cabin object.
        /// </summary>
        /// <param name="cabinID">Initial value of the CabinID property.</param>
        public static Cabin CreateCabin(global::System.Int32 cabinID)
        {
            Cabin cabin = new Cabin();
            cabin.CabinID = cabinID;
            return cabin;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CabinID
        {
            get
            {
                return _CabinID;
            }
            set
            {
                if (_CabinID != value)
                {
                    OnCabinIDChanging(value);
                    ReportPropertyChanging("CabinID");
                    _CabinID = StructuralObject.SetValidValue(value, "CabinID");
                    ReportPropertyChanged("CabinID");
                    OnCabinIDChanged();
                }
            }
        }
        private global::System.Int32 _CabinID;
        partial void OnCabinIDChanging(global::System.Int32 value);
        partial void OnCabinIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CabinDescription
        {
            get
            {
                return _CabinDescription;
            }
            set
            {
                OnCabinDescriptionChanging(value);
                ReportPropertyChanging("CabinDescription");
                _CabinDescription = StructuralObject.SetValidValue(value, true, "CabinDescription");
                ReportPropertyChanged("CabinDescription");
                OnCabinDescriptionChanged();
            }
        }
        private global::System.String _CabinDescription;
        partial void OnCabinDescriptionChanging(global::System.String value);
        partial void OnCabinDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CabinPrice
        {
            get
            {
                return _CabinPrice;
            }
            set
            {
                OnCabinPriceChanging(value);
                ReportPropertyChanging("CabinPrice");
                _CabinPrice = StructuralObject.SetValidValue(value, "CabinPrice");
                ReportPropertyChanged("CabinPrice");
                OnCabinPriceChanged();
            }
        }
        private Nullable<global::System.Int32> _CabinPrice;
        partial void OnCabinPriceChanging(Nullable<global::System.Int32> value);
        partial void OnCabinPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                OnClassIDChanging(value);
                ReportPropertyChanging("ClassID");
                _ClassID = StructuralObject.SetValidValue(value, "ClassID");
                ReportPropertyChanged("ClassID");
                OnClassIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClassID;
        partial void OnClassIDChanging(Nullable<global::System.Int32> value);
        partial void OnClassIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitanicModel", "FK_Cabin_Class", "Class")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("TitanicModel.FK_Cabin_Class", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("TitanicModel.FK_Cabin_Class", "Class").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("TitanicModel.FK_Cabin_Class", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("TitanicModel.FK_Cabin_Class", "Class", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitanicModel", "FK_Passenger_Cabin", "Passenger")]
        public EntityCollection<Passenger> Passenger
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Passenger>("TitanicModel.FK_Passenger_Cabin", "Passenger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Passenger>("TitanicModel.FK_Passenger_Cabin", "Passenger", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TitanicModel", Name="Class")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Class : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Class object.
        /// </summary>
        /// <param name="classID">Initial value of the ClassID property.</param>
        public static Class CreateClass(global::System.Int32 classID)
        {
            Class @class = new Class();
            @class.ClassID = classID;
            return @class;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                if (_ClassID != value)
                {
                    OnClassIDChanging(value);
                    ReportPropertyChanging("ClassID");
                    _ClassID = StructuralObject.SetValidValue(value, "ClassID");
                    ReportPropertyChanged("ClassID");
                    OnClassIDChanged();
                }
            }
        }
        private global::System.Int32 _ClassID;
        partial void OnClassIDChanging(global::System.Int32 value);
        partial void OnClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClassDescription
        {
            get
            {
                return _ClassDescription;
            }
            set
            {
                OnClassDescriptionChanging(value);
                ReportPropertyChanging("ClassDescription");
                _ClassDescription = StructuralObject.SetValidValue(value, true, "ClassDescription");
                ReportPropertyChanged("ClassDescription");
                OnClassDescriptionChanged();
            }
        }
        private global::System.String _ClassDescription;
        partial void OnClassDescriptionChanging(global::System.String value);
        partial void OnClassDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitanicModel", "FK_Cabin_Class", "Cabin")]
        public EntityCollection<Cabin> Cabin
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cabin>("TitanicModel.FK_Cabin_Class", "Cabin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cabin>("TitanicModel.FK_Cabin_Class", "Cabin", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitanicModel", "FK_Crew_Class", "Crew")]
        public EntityCollection<Crew> Crew
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Crew>("TitanicModel.FK_Crew_Class", "Crew");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Crew>("TitanicModel.FK_Crew_Class", "Crew", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TitanicModel", Name="Crew")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Crew : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Crew object.
        /// </summary>
        /// <param name="crewID">Initial value of the CrewID property.</param>
        public static Crew CreateCrew(global::System.Int32 crewID)
        {
            Crew crew = new Crew();
            crew.CrewID = crewID;
            return crew;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CrewID
        {
            get
            {
                return _CrewID;
            }
            set
            {
                if (_CrewID != value)
                {
                    OnCrewIDChanging(value);
                    ReportPropertyChanging("CrewID");
                    _CrewID = StructuralObject.SetValidValue(value, "CrewID");
                    ReportPropertyChanged("CrewID");
                    OnCrewIDChanged();
                }
            }
        }
        private global::System.Int32 _CrewID;
        partial void OnCrewIDChanging(global::System.Int32 value);
        partial void OnCrewIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Lastname
        {
            get
            {
                return _Lastname;
            }
            set
            {
                OnLastnameChanging(value);
                ReportPropertyChanging("Lastname");
                _Lastname = StructuralObject.SetValidValue(value, true, "Lastname");
                ReportPropertyChanged("Lastname");
                OnLastnameChanged();
            }
        }
        private global::System.String _Lastname;
        partial void OnLastnameChanging(global::System.String value);
        partial void OnLastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Firstname
        {
            get
            {
                return _Firstname;
            }
            set
            {
                OnFirstnameChanging(value);
                ReportPropertyChanging("Firstname");
                _Firstname = StructuralObject.SetValidValue(value, true, "Firstname");
                ReportPropertyChanged("Firstname");
                OnFirstnameChanged();
            }
        }
        private global::System.String _Firstname;
        partial void OnFirstnameChanging(global::System.String value);
        partial void OnFirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value, "Age");
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private Nullable<global::System.Int32> _Age;
        partial void OnAgeChanging(Nullable<global::System.Int32> value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                OnDepartmentIDChanging(value);
                ReportPropertyChanging("DepartmentID");
                _DepartmentID = StructuralObject.SetValidValue(value, "DepartmentID");
                ReportPropertyChanged("DepartmentID");
                OnDepartmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DepartmentID;
        partial void OnDepartmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnDepartmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Job
        {
            get
            {
                return _Job;
            }
            set
            {
                OnJobChanging(value);
                ReportPropertyChanging("Job");
                _Job = StructuralObject.SetValidValue(value, true, "Job");
                ReportPropertyChanged("Job");
                OnJobChanged();
            }
        }
        private global::System.String _Job;
        partial void OnJobChanging(global::System.String value);
        partial void OnJobChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClassID
        {
            get
            {
                return _ClassID;
            }
            set
            {
                OnClassIDChanging(value);
                ReportPropertyChanging("ClassID");
                _ClassID = StructuralObject.SetValidValue(value, "ClassID");
                ReportPropertyChanged("ClassID");
                OnClassIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClassID;
        partial void OnClassIDChanging(Nullable<global::System.Int32> value);
        partial void OnClassIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitanicModel", "FK_Crew_Class", "Class")]
        public Class Class
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("TitanicModel.FK_Crew_Class", "Class").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("TitanicModel.FK_Crew_Class", "Class").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Class> ClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Class>("TitanicModel.FK_Crew_Class", "Class");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Class>("TitanicModel.FK_Crew_Class", "Class", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitanicModel", "FK_Crew_DepartCity", "DepartCity")]
        public DepartCity DepartCity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartCity>("TitanicModel.FK_Crew_DepartCity", "DepartCity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartCity>("TitanicModel.FK_Crew_DepartCity", "DepartCity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DepartCity> DepartCityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartCity>("TitanicModel.FK_Crew_DepartCity", "DepartCity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DepartCity>("TitanicModel.FK_Crew_DepartCity", "DepartCity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitanicModel", "FK_Crew_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("TitanicModel.FK_Crew_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("TitanicModel.FK_Crew_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("TitanicModel.FK_Crew_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("TitanicModel.FK_Crew_Department", "Department", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TitanicModel", Name="DepartCity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DepartCity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DepartCity object.
        /// </summary>
        /// <param name="cityID">Initial value of the cityID property.</param>
        public static DepartCity CreateDepartCity(global::System.Int32 cityID)
        {
            DepartCity departCity = new DepartCity();
            departCity.cityID = cityID;
            return departCity;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 cityID
        {
            get
            {
                return _cityID;
            }
            set
            {
                if (_cityID != value)
                {
                    OncityIDChanging(value);
                    ReportPropertyChanging("cityID");
                    _cityID = StructuralObject.SetValidValue(value, "cityID");
                    ReportPropertyChanged("cityID");
                    OncityIDChanged();
                }
            }
        }
        private global::System.Int32 _cityID;
        partial void OncityIDChanging(global::System.Int32 value);
        partial void OncityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cityName
        {
            get
            {
                return _cityName;
            }
            set
            {
                OncityNameChanging(value);
                ReportPropertyChanging("cityName");
                _cityName = StructuralObject.SetValidValue(value, true, "cityName");
                ReportPropertyChanged("cityName");
                OncityNameChanged();
            }
        }
        private global::System.String _cityName;
        partial void OncityNameChanging(global::System.String value);
        partial void OncityNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitanicModel", "FK_Crew_DepartCity", "Crew")]
        public EntityCollection<Crew> Crew
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Crew>("TitanicModel.FK_Crew_DepartCity", "Crew");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Crew>("TitanicModel.FK_Crew_DepartCity", "Crew", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitanicModel", "FK_Passenger_DepartCity", "Passenger")]
        public EntityCollection<Passenger> Passenger
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Passenger>("TitanicModel.FK_Passenger_DepartCity", "Passenger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Passenger>("TitanicModel.FK_Passenger_DepartCity", "Passenger", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TitanicModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="departmentID">Initial value of the DepartmentID property.</param>
        public static Department CreateDepartment(global::System.Int32 departmentID)
        {
            Department department = new Department();
            department.DepartmentID = departmentID;
            return department;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                if (_DepartmentID != value)
                {
                    OnDepartmentIDChanging(value);
                    ReportPropertyChanging("DepartmentID");
                    _DepartmentID = StructuralObject.SetValidValue(value, "DepartmentID");
                    ReportPropertyChanged("DepartmentID");
                    OnDepartmentIDChanged();
                }
            }
        }
        private global::System.Int32 _DepartmentID;
        partial void OnDepartmentIDChanging(global::System.Int32 value);
        partial void OnDepartmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DepartmentDescription
        {
            get
            {
                return _DepartmentDescription;
            }
            set
            {
                OnDepartmentDescriptionChanging(value);
                ReportPropertyChanging("DepartmentDescription");
                _DepartmentDescription = StructuralObject.SetValidValue(value, true, "DepartmentDescription");
                ReportPropertyChanged("DepartmentDescription");
                OnDepartmentDescriptionChanged();
            }
        }
        private global::System.String _DepartmentDescription;
        partial void OnDepartmentDescriptionChanging(global::System.String value);
        partial void OnDepartmentDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitanicModel", "FK_Crew_Department", "Crew")]
        public EntityCollection<Crew> Crew
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Crew>("TitanicModel.FK_Crew_Department", "Crew");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Crew>("TitanicModel.FK_Crew_Department", "Crew", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TitanicModel", Name="Passenger")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Passenger : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Passenger object.
        /// </summary>
        /// <param name="passengerID">Initial value of the PassengerID property.</param>
        public static Passenger CreatePassenger(global::System.Int32 passengerID)
        {
            Passenger passenger = new Passenger();
            passenger.PassengerID = passengerID;
            return passenger;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PassengerID
        {
            get
            {
                return _PassengerID;
            }
            set
            {
                if (_PassengerID != value)
                {
                    OnPassengerIDChanging(value);
                    ReportPropertyChanging("PassengerID");
                    _PassengerID = StructuralObject.SetValidValue(value, "PassengerID");
                    ReportPropertyChanged("PassengerID");
                    OnPassengerIDChanged();
                }
            }
        }
        private global::System.Int32 _PassengerID;
        partial void OnPassengerIDChanging(global::System.Int32 value);
        partial void OnPassengerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Lastname
        {
            get
            {
                return _Lastname;
            }
            set
            {
                OnLastnameChanging(value);
                ReportPropertyChanging("Lastname");
                _Lastname = StructuralObject.SetValidValue(value, true, "Lastname");
                ReportPropertyChanged("Lastname");
                OnLastnameChanged();
            }
        }
        private global::System.String _Lastname;
        partial void OnLastnameChanging(global::System.String value);
        partial void OnLastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Firstname
        {
            get
            {
                return _Firstname;
            }
            set
            {
                OnFirstnameChanging(value);
                ReportPropertyChanging("Firstname");
                _Firstname = StructuralObject.SetValidValue(value, true, "Firstname");
                ReportPropertyChanged("Firstname");
                OnFirstnameChanged();
            }
        }
        private global::System.String _Firstname;
        partial void OnFirstnameChanging(global::System.String value);
        partial void OnFirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value, true, "Age");
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private global::System.String _Age;
        partial void OnAgeChanging(global::System.String value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CabinID
        {
            get
            {
                return _CabinID;
            }
            set
            {
                OnCabinIDChanging(value);
                ReportPropertyChanging("CabinID");
                _CabinID = StructuralObject.SetValidValue(value, "CabinID");
                ReportPropertyChanged("CabinID");
                OnCabinIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CabinID;
        partial void OnCabinIDChanging(Nullable<global::System.Int32> value);
        partial void OnCabinIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ticket
        {
            get
            {
                return _Ticket;
            }
            set
            {
                OnTicketChanging(value);
                ReportPropertyChanging("Ticket");
                _Ticket = StructuralObject.SetValidValue(value, true, "Ticket");
                ReportPropertyChanged("Ticket");
                OnTicketChanged();
            }
        }
        private global::System.String _Ticket;
        partial void OnTicketChanging(global::System.String value);
        partial void OnTicketChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TicketPrice
        {
            get
            {
                return _TicketPrice;
            }
            set
            {
                OnTicketPriceChanging(value);
                ReportPropertyChanging("TicketPrice");
                _TicketPrice = StructuralObject.SetValidValue(value, true, "TicketPrice");
                ReportPropertyChanged("TicketPrice");
                OnTicketPriceChanged();
            }
        }
        private global::System.String _TicketPrice;
        partial void OnTicketPriceChanging(global::System.String value);
        partial void OnTicketPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Job
        {
            get
            {
                return _Job;
            }
            set
            {
                OnJobChanging(value);
                ReportPropertyChanging("Job");
                _Job = StructuralObject.SetValidValue(value, true, "Job");
                ReportPropertyChanged("Job");
                OnJobChanged();
            }
        }
        private global::System.String _Job;
        partial void OnJobChanging(global::System.String value);
        partial void OnJobChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitanicModel", "FK_Passenger_Cabin", "Cabin")]
        public Cabin Cabin
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cabin>("TitanicModel.FK_Passenger_Cabin", "Cabin").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cabin>("TitanicModel.FK_Passenger_Cabin", "Cabin").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cabin> CabinReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cabin>("TitanicModel.FK_Passenger_Cabin", "Cabin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cabin>("TitanicModel.FK_Passenger_Cabin", "Cabin", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("TitanicModel", "FK_Passenger_DepartCity", "DepartCity")]
        public DepartCity DepartCity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartCity>("TitanicModel.FK_Passenger_DepartCity", "DepartCity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartCity>("TitanicModel.FK_Passenger_DepartCity", "DepartCity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DepartCity> DepartCityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DepartCity>("TitanicModel.FK_Passenger_DepartCity", "DepartCity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DepartCity>("TitanicModel.FK_Passenger_DepartCity", "DepartCity", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
